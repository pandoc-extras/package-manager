# os: linux and sudo: false is assumed, which means it is using container-based Ubuntu 12.04
language: python
cache:
  - pip
# build matrix: different python and pandoc versions
python:
  # - "3.2"
  - "3.3"
  - "3.4"
  - "3.5"
  # - "3.5-dev" # 3.5 development branch
  # - "3.6-dev" # 3.6 development branch
  # - "nightly" # currently points to 3.7-dev
  # - "pypy3"
# env:
  # - pandocVersion=1.13.2-1
  # - pandocVersion=1.14-1
  # - pandocVersion=1.14.0.1-1
  # - pandocVersion=1.14.1-1
  # - pandocVersion=1.15-1
  # - pandocVersion=1.15.0.5-1
  # - pandocVersion=1.15.0.6-1
  # - pandocVersion=1.15.1-1
  # - pandocVersion=1.15.2-1
  # - pandocVersion=1.16-3
  # - pandocVersion=1.16.0.1-1
  # - pandocVersion=1.16.0.2-1
  # - pandocVersion=1.17-1
  # - pandocVersion=1.17.0.1-1
  # - pandocVersion=1.17.0.2-1
  # - pandocVersion=1.17.1-2
  # - pandocVersion=1.17.2-1
  # - pandocVersion=1.18-1
# matrix:
  # allow_failures:
    # - python: "3.5-dev"
    # - python: "3.6-dev"
    # - python: "nightly"
    # - python: "pypy3"
    # - env: pandocVersion=1.13.2-1
    # - env: pandocVersion=1.14-1
    # - env: pandocVersion=1.14.0.1-1
    # - env: pandocVersion=1.14.1-1
    # - env: pandocVersion=1.15-1
    # - env: pandocVersion=1.15.0.5-1
    # - env: pandocVersion=1.15.0.6-1
    # - env: pandocVersion=1.15.1-1
    # - env: pandocVersion=1.15.2-1
  # fast_finish: true
install:
  # - wget https://github.com/jgm/pandoc/releases/download/${pandocVersion%-*}/pandoc-$pandocVersion-amd64.deb &&
  #   sudo dpkg -i pandoc-$pandocVersion-amd64.deb
  - pip install -U pip
  - pip install -e .[test]
# command to run tests
script:
  - make -j4 test
after_success:
  - if [[ "$pandocVersion" == "1.18-1" ]] && [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]]; then coveralls; else printf "skip coveralls"; fi;
deploy:
  provider: pypi
  user: ickc
  password: $pypi_password
  skip_cleanup: true
  on:
    tags: true
    python: "3.5"
    condition: $pandocVersion = 1.18-1
